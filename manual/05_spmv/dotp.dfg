Input: indA
Input: indB
Input: matchValA
Input: matchValB

# generate predicate whether indices match (0 for match and 3 for end)
pred = Compare64(indA, indB, self={1:b1, 2:b2})

cntIndA = Acc64(1, 0, ctrl=pred{1:a}) # if b1, then do not increment
cntIndB = Acc64(1, 0, ctrl=pred{2:a})
matched = Min64(cntIndA, cntIndB, ctrl=pred{1:b1|d, 2:b2|d, 3:d})

# returns the matched indices
matchIndA = matched
matchIndB = matched 

# performs multiplication for the matched indices
mult = Mul64(matchValA, matchValB)

# only output if it is a match or end
done = Keep(pred, 1, ctrl=pred{1:d,2:d})
O    = Acc64(mult, 0, ctrl=done{0:d,3:r})

Output: matchIndA
Output: matchIndB
Output: O
